{"version":3,"sources":["../src/_layout.js"],"names":["_l","require","_n","Util","Animate","Link","Node","getNodesCenter","elementArray","$x","$y","forEach","val","cx","cy","result","x","length","y","circleLayoutNodes","animates","$cx","$cy","minR","minRadius","dia","nodeDiameter","_hScale","hScale","_vScale","vScale","beginAngle","endAngle","Math","PI","centerPos","totalDia","circumferenceArray","diaArray","item","diameter","radius","sqrt","width","height","push","value","index","singleDia","twoCircum","twoRadius","tempR","sin","_radius","_radiusB","singleAnimate","animate","angle","millsec","time","tempX","cos","tempY","stepByStep","start","tempCX","tempCY","radiusA","radiusB","GridLayout","row","column","container","childs","bound","getBound","ele","colSize","rowSize","i","j","k","_x","left","_y","top","setLocation","FlowLayout","horizontal","vertical","_left","_top","h","right","AutoBoundLayout","reverseX","reverseY","_width","_height","getRootNodes","results","links","filter","nodeZ","nodeA","calcSize","eleArr","totalW","totalH","calcAndSetPosition","scene","rootNode","allChilds","getNodeChilds","getTreeNodes","calcNodes","node","nodes","parent","TreeLayout","directionType","$stage","executeTree","deep","getTreeDeep","tempRns","nodeArr","clNode","tempW","tempH","currentLevelNodes","tempChilds","nodeItem","childItem","abs","m","n","singleSize","rns","getElementsBound","getCenterLocation","bottom","CircleLayout","$scene","calcLocation","_scene","girth","child","halfDia","center","resX","resY","getGridPositions","rows","cols","positions","getCyclePositions","counts","begin","end","diff","avg","getTreePositions","count","dir","direction","bstart","b","tstart","rstart","r","lstart","l","adjustPosition","layout","_layout","_type","type","pos","max","setCenterLocation","layoutNode","targetEle","isAutoLayout","allChild","springLayout","$rootNode","additive","multiplicative","currentX","currentY","allEles","getElementsByClass","dynamicAdjustPos","rn","tarNode","distanceX","distanceY","doSpring","setTimeout","calcDeep","_rootNode","_deep","allchilds","module","exports"],"mappings":"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","file":"_layout.js","sourcesContent":["//////////////////////////////\n/**\n * 布局\n * @author ilex\n * @description 2016-11-09 11:56:12\n */\n//////////////////////////////\n\nconst _l = require('./_link');\nconst _n = require('./_node');\nconst Util = require('./_util');\nconst Animate = require('./_animate');\n\nconst Link = _l.Link;\nconst Node = _n.Node;\n\n/**\n * 获取中心位置\n *\n * @param {any} elementArray\n * @returns\n */\nfunction getNodesCenter(elementArray) {\n  let $x = 0, $y = 0;\n  elementArray.forEach(function(val) {\n    $x += val.cx,\n      $y += val.cy;\n  });\n  let result = {\n    x: $x / elementArray.length,\n    y: $y / elementArray.length\n  };\n  return result;\n}\n\n/**\n * 环形layout\n *\n * @param {any} elementArray 元素集合\n * @param {any} animates 动画\n * @returns\n */\nfunction circleLayoutNodes(elementArray, animates) {\n  null == animates && (animates = {});\n  let $cx = animates.cx,\n    $cy = animates.cy,\n    minR = animates.minRadius,\n    dia = animates.nodeDiameter,\n    _hScale = animates.hScale || 1,\n    _vScale = animates.vScale || 1;\n  animates.beginAngle || 0,\n      animates.endAngle || 2 * Math.PI;\n  if (null == $cx || null == $cy) {\n    let centerPos = getNodesCenter(elementArray);\n    $cx = centerPos.x,\n      $cy = centerPos.y;\n  }\n  let totalDia = 0,\n    // 圆周长集合\n    circumferenceArray = [],\n    // 直径集合\n    diaArray = [];\n  elementArray.forEach(function(item) {\n    null == animates.nodeDiameter ? (item.diameter && (dia = item.diameter), dia = item.radius ? 2 * item.radius : Math.sqrt(2 * item.width * item.height), diaArray.push(dia)) : diaArray.push(dia),\n      totalDia += dia;\n  }),\n  elementArray.forEach(function(value, index) {\n    let singleDia = diaArray[index] / totalDia;\n    circumferenceArray.push(Math.PI * singleDia);\n  });\n  let twoCircum = (elementArray.length, circumferenceArray[0] + circumferenceArray[1]),\n    twoRadius = diaArray[0] / 2 + diaArray[1] / 2,\n    tempR = twoRadius / 2 / Math.sin(twoCircum / 2);\n  null != minR && minR > tempR && (tempR = minR);\n  let _radius = tempR * _hScale,\n    _radiusB = tempR * _vScale,\n    singleAnimate = animates.animate;\n  let angle = 0;\n  if (singleAnimate) {\n    let millsec = singleAnimate.time || 1000;\n      // v = 0;\n    elementArray.forEach(function(item, index) {\n      angle += 0 == index ? circumferenceArray[index] : circumferenceArray[index - 1] + circumferenceArray[index];\n      let tempX = $cx + Math.cos(angle) * _radius,\n        tempY = $cy + Math.sin(angle) * _radiusB;\n      Animate.stepByStep(item, {\n        x: tempX - item.width / 2,\n        y: tempY - item.height / 2\n      },\n        millsec).start();\n    });\n  } else {\n    // let v = 0;\n    elementArray.forEach(function(item, index) {\n      angle += 0 == index ? circumferenceArray[index] : circumferenceArray[index - 1] + circumferenceArray[index];\n      let tempCX = $cx + Math.cos(angle) * _radius,\n        tempCY = $cy + Math.sin(angle) * _radiusB;\n      item.cx = tempCX,\n        item.cy = tempCY;\n    });\n  }\n  return {\n    cx: $cx,\n    cy: $cy,\n    radius: _radius,\n    radiusA: _radius,\n    radiusB: _radiusB\n  };\n}\n\n/**\n * 网格布局\n *\n * @param {Number} row 行\n * @param {Number} column 列\n * @returns\n */\nfunction GridLayout(row, column) {\n  return function(container) {\n    let elementArray = container.childs;\n    if (!(elementArray.length <= 0))\n    {\n      let bound = container.getBound(),\n        ele = elementArray[0],\n        colSize = (bound.width - ele.width) / column,\n        rowSize = (bound.height - ele.height) / row,\n        i = 0;\n      for ( let j = 0; j < row; j++) {\n        for (let k = 0; k < column; k++) {\n          let ele = elementArray[i++],\n            _x = bound.left + colSize / 2 + k * colSize,\n            _y = bound.top + rowSize / 2 + j * rowSize;\n          ele.setLocation(_x, _y);\n          if (i >= elementArray.length) {\n            return;\n          }\n        }\n      }\n    }\n  };\n}\n\n/**\n * 流式布局\n *\n * @param {any} horizontal 水平间隔\n * @param {any} vertical 垂直间隔\n * @returns\n */\nfunction FlowLayout(horizontal, vertical) {\n  return null == horizontal && (horizontal = 0),\n    null == vertical && (vertical = 0),\n    function(container) {\n      let elementArray = container.childs;\n      if (!(elementArray.length <= 0))\n      {\n        let bound = container.getBound(), _left = bound.left, _top = bound.top;\n        for (let h = 0; h < elementArray.length; h++) {\n          let ele = elementArray[h];\n          _left + ele.width >= bound.right && (_left = bound.left, _top += vertical + ele.height),\n            ele.setLocation(_left, _top),\n            _left += horizontal + ele.width;\n        }\n      }\n    };\n}\n\n/**\n * 自动布局\n *\n * @returns\n */\nfunction AutoBoundLayout() {\n  return function(container, elementArray) {\n    if (elementArray.length > 0) {\n      let _x = 1e7,\n        reverseX = -1e7,\n        _y = 1e7,\n        reverseY = -1e7,\n        _width = reverseX - _x,\n        _height = reverseY - _y;\n      for (let i = 0; i < elementArray.length; i++) {\n        let ele = elementArray[i];\n        ele.x <= _x && (_x = ele.x),\n          ele.x >= reverseX && (reverseX = ele.x),\n          ele.y <= _y && (_y = ele.y),\n          ele.y >= reverseY && (reverseY = ele.y),\n          _width = reverseX - _x + ele.width,\n          _height = reverseY - _y + ele.height;\n      }\n      container.x = _x,\n        container.y = _y,\n        container.width = _width,\n        container.height = _height;\n    }\n  };\n}\n\n/**\n * 获取根节点\n *\n * @param {any} elementArray\n * @returns\n */\nfunction getRootNodes(elementArray) {\n  let results = [],\n    links = elementArray.filter(function(ele) {\n      return ele instanceof Link ? true : (results.push(ele), false);\n      // return ele.elementType === 'link' ? true : (result.push(ele), false);\n    });\n  return elementArray = results.filter(function(result) {\n    for (let i = 0; i < links.length; i++) {\n      if (links[i].nodeZ === result) {\n        return false;\n      }\n    }\n    return true;\n  }),\n    elementArray = elementArray.filter(function(ele) {\n      for (let j = 0; j < links.length; j++) {\n        if (links[j].nodeA === ele) {\n          return true;\n        }\n      }\n      return false;\n    });\n}\n\n/**\n * 计算单个元素的长和宽\n *\n * @param {any} eleArr\n * @returns\n */\nfunction calcSize(eleArr) {\n  let totalW = 0,\n    totalH = 0;\n  return eleArr.forEach(function(ele) {\n    totalW += ele.width,\n      totalH += ele.height;\n  }),\n    {\n      width: totalW / eleArr.length,\n      height: totalH / eleArr.length\n    };\n}\n\n/**\n * 计算和设节点位置\n *\n * @param {any} scene\n * @param {any} rootNode\n * @param {any} _x\n * @param {any} _y\n */\nfunction calcAndSetPosition(scene, rootNode, _x, _y) {\n  rootNode.x += _x,\n    rootNode.y += _y;\n  let allChilds = getNodeChilds(scene, rootNode);\n  for (let i = 0; i < allChilds.length; i++){\n    calcAndSetPosition(scene, allChilds[i], _x, _y);\n  }\n}\n\n/**\n * 获取tree node 集合\n *\n * @param {any} scene\n * @param {any} rootNode\n * @returns\n */\nfunction getTreeNodes(scene, rootNode) {\n  function calcNodes(node, index) {\n    let allChilds = getNodeChilds(scene, node);\n    null == result[index] && (result[index] = {},result[index].nodes = [], result[index].childs = []),\n      result[index].nodes.push(node),\n      result[index].childs.push(allChilds);\n    for (let i = 0; i < allChilds.length; i++){\n      calcNodes(allChilds[i], index + 1),allChilds[i].parent = node;\n    }\n  }\n  let result = [];\n  return calcNodes(rootNode, 0),\n    result;\n}\n\n/**\n * 设置Tree布局\n *\n * @param {String} directionType 方向类型\n * @param {Number} _width 宽\n * @param {Number} _height 高\n * @returns\n */\nfunction TreeLayout(directionType, _width, _height) {\n  return function($stage) {\n    function executeTree(scene, rootNode) {\n      let deep = getTreeDeep(scene, rootNode),\n        tempRns = getTreeNodes(scene, rootNode),\n        nodeArr = tempRns['' + deep].nodes;\n      for (let i = 0; i < nodeArr.length; i++) {\n        let clNode = nodeArr[i],\n          tempW = (i + 1) * (_width + 10),\n          tempH = deep * _height;\n        'down' == directionType || ('up' == directionType ? tempH = -tempH : 'left' == directionType ? (tempW = -deep * _height, tempH = (i + 1) * (_width + 10)) : 'right' == directionType && (tempW = deep * _height, tempH = (i + 1) * (_width + 10))),\n          clNode.setLocation(tempW, tempH);\n      }\n      for (let j = deep - 1; j >= 0; j--) {\n        // 当前层的node集合\n        let currentLevelNodes = tempRns['' + j].nodes,\n          tempChilds = tempRns['' + j].childs;\n        for (let k = 0; k < currentLevelNodes.length; k++) {\n          let nodeItem = currentLevelNodes[k],\n            childItem = tempChilds[k];\n          'down' == directionType ? nodeItem.y = j * _height : 'up' == directionType ? nodeItem.y = -j * _height : 'left' == directionType ? nodeItem.x = -j * _height : 'right' == directionType && (nodeItem.x = j * _height),\n            childItem.length > 0 ?\n            'down' == directionType || 'up' == directionType ?\n            nodeItem.x = (childItem[0].x + childItem[childItem.length - 1].x) / 2 : ('left' == directionType || 'right' == directionType) &&\n            (nodeItem.y = (childItem[0].y + childItem[childItem.length - 1].y) / 2) : k > 0 &&\n            ('down' == directionType || 'up' == directionType ?\n              nodeItem.x = currentLevelNodes[k - 1].x + currentLevelNodes[k - 1].width + _width : ('left' == directionType || 'right' == directionType) &&\n              (nodeItem.y = currentLevelNodes[k - 1].y + currentLevelNodes[k - 1].height + _width)\n            );\n          if (k > 0) {\n            if ('down' == directionType || 'up' == directionType) {\n              if (nodeItem.x < currentLevelNodes[k - 1].x + currentLevelNodes[k - 1].width) {\n                let totalW = currentLevelNodes[k - 1].x + currentLevelNodes[k - 1].width + _width,\n                  tempX = Math.abs(totalW - nodeItem.x);\n                for (let m = k; m < currentLevelNodes.length; m++) {\n                  calcAndSetPosition($stage.childs, currentLevelNodes[m], tempX, 0);\n                }\n              }\n            }\n            else if (('left' == directionType || 'right' == directionType) && nodeItem.y < currentLevelNodes[k - 1].y + currentLevelNodes[k - 1].height) {\n              let totalH = currentLevelNodes[k - 1].y + currentLevelNodes[k - 1].height + _width,\n                tempY = Math.abs(totalH - nodeItem.y);\n              for (let n = k; n < currentLevelNodes.length; n++) {\n                calcAndSetPosition($stage.childs, currentLevelNodes[n], 0, tempY);\n              }\n            }\n          }\n        }\n      }\n    }\n    let singleSize = null;\n    null == _width && (singleSize = calcSize($stage.childs), _width = singleSize.width, ('left' == directionType || 'right' == directionType) && (_width = singleSize.width + 10)),\n      null == _height && (null == singleSize && (singleSize = calcSize($stage.childs)), _height = 2 * singleSize.height),\n      null == directionType && (directionType = 'down');\n    let rns = getRootNodes($stage.childs);\n    if (rns.length > 0) {\n      executeTree($stage.childs, rns[0]);\n      let bound = Util.getElementsBound($stage.childs),\n        centerPos = $stage.getCenterLocation(),\n        _x = centerPos.x - (bound.left + bound.right) / 2,\n        _y = centerPos.y - (bound.top + bound.bottom) / 2;\n      $stage.childs.forEach(function(item) {\n        item instanceof Node && (item.x += _x, item.y += _y);\n        // item.elementType === 'node' && (item.x += _x, item.y += _y);\n      });\n    }\n  };\n}\n\n/**\n * 圆布局\n *\n * @param {any} diameter 直径\n * @returns\n */\nfunction CircleLayout(diameter) {\n  return function($scene) {\n    function calcLocation(_scene, rootNode, dia) {\n      let allChilds = getNodeChilds(_scene, rootNode);\n      if (0 != allChilds.length) {\n        null == dia && (dia = diameter);\n        let girth = 2 * Math.PI / allChilds.length;\n        allChilds.forEach(function(child, index) {\n          let _x = rootNode.x + dia * Math.cos(girth * index),\n            _y = rootNode.y + dia * Math.sin(girth * index);\n          child.setLocation(_x, _y);\n          let halfDia = dia / 2;\n          calcLocation(_scene, child, halfDia);\n        });\n      }\n    }\n    let nodes = getRootNodes($scene.childs);\n    if (nodes.length > 0) {\n      calcLocation($scene.childs, nodes[0]);\n      let bound = Util.getElementsBound($scene.childs),\n        center = $scene.getCenterLocation(),\n        resX = center.x - (bound.left + bound.right) / 2,\n        resY = center.y - (bound.top + bound.bottom) / 2;\n      $scene.childs.forEach(function(child) {\n        child instanceof Node && (child.x += resX, child.y += resY);\n        // child.elementType === 'node' && (child.x += resX, child.y += resY);\n      });\n    }\n  };\n}\n\n/**\n * 获取Grid 位置\n *\n * @param {any} x\n * @param {any} y\n * @param {any} rows\n * @param {any} cols\n * @param {any} horizontal\n * @param {any} vertical\n * @returns\n */\nfunction getGridPositions(x, y, rows, cols, horizontal, vertical) {\n  let positions =[];\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      positions.push({\n        x: x + j * horizontal,\n        y: y + i * vertical\n      });\n    }\n  }\n  return positions;\n}\n\n/**\n * 获取圆型位置\n *\n * @param {any} x\n * @param {any} y\n * @param {any} counts\n * @param {any} radius 半径\n * @param {any} begin\n * @param {any} end\n * @returns\n */\nfunction getCyclePositions(x, y, counts, radius, begin, end) {\n  let beginAngle = begin ? begin : 0,\n    endAngle = end ? end : 2 * Math.PI,\n    diff = endAngle - beginAngle,\n    avg = diff / counts,\n    results = [];\n  beginAngle += avg / 2;\n  for (let i = beginAngle; endAngle >= i; i += avg) {\n    let _x = x + Math.cos(i) * radius,\n      _y = y + Math.sin(i) * radius;\n    results.push({\n      x: _x,\n      y: _y\n    });\n  }\n  return results;\n}\n\n/**\n * 获取树位置\n *\n * @param {number} x\n * @param {number} y\n * @param {number} count\n * @param {number} horizontal\n * @param {number} vertical\n * @param {string} dir 方向 默认bottom\n * @returns\n */\nfunction getTreePositions(x, y, count, horizontal, vertical, dir) {\n  let direction = dir || 'bottom',\n    result = [];\n\n  if (direction == 'bottom') {\n    // bottom类型的起始位置,bottom start\n    let bstart = x - (count / 2) * horizontal + horizontal / 2;\n    for (let b = 0; b <= count; b++) {\n      result.push({\n        x: bstart + b * horizontal,\n        y: y + vertical\n      });\n    }\n  }\n  else if (direction == 'top') {\n    let tstart = x - (count / 2) * horizontal + horizontal / 2;\n    for (let i = 0; i <= count; i++) {\n      result.push({\n        x: tstart + i * horizontal,\n        y: y - vertical\n      });\n    }\n  }\n  else if (direction == 'right') {\n    let rstart = y - (count / 2) * horizontal + horizontal / 2;\n    for (let r = 0; r <= count; r++) {\n      result.push({\n        x: x + vertical,\n        y: rstart + r * horizontal\n      });\n    }\n  }\n  else if (direction == 'left') {\n    let lstart = y - (count / 2) * horizontal + horizontal / 2;\n    for (let l = 0; l <= count; l++) {\n      result.push({\n        x: x - vertical,\n        y: lstart + l * horizontal\n      });\n    }\n  }\n  return result;\n}\n\n/**\n * 调整位置\n *\n * @param {any} ele 元素\n * @param {any} allChilds 子节点\n * @returns\n */\nfunction adjustPosition(ele, allChilds) {\n  if (ele.layout) {\n    let _layout = ele.layout,\n      _type = _layout.type,\n      pos = null;\n    if ('circle' == _type) {\n      let _radius = _layout.radius || Math.max(ele.width, ele.height);\n      pos = getCyclePositions(ele.cx, ele.cy, allChilds.length, _radius, ele.layout.beginAngle, ele.layout.endAngle);\n    } else if ('tree' == _type) {\n      let horizontal = _layout.width || 50,\n        vertical = _layout.height || 50,\n        direction = _layout.direction;\n      pos = getTreePositions(ele.cx, ele.cy, allChilds.length, horizontal, vertical, direction);\n    } else {\n      if ('grid' != _type) {\n        return;\n      }\n      pos = getGridPositions(ele.x, ele.y, _layout.rows, _layout.cols, _layout.horizontal || 0, _layout.vertical || 0);\n    }\n    for (let i = 0; i < allChilds.length; i++) {\n      allChilds[i].setCenterLocation(pos[i].x, pos[i].y);\n    }\n  }\n}\n\n/**\n * 获取node节点的子节点\n *\n * @param {any} scene\n * @param {any} rootNode\n * @returns\n */\nfunction getNodeChilds(scene, rootNode) {\n  let results = [];\n  for (let i = 0; i < scene.length; i++) {\n    scene[i] instanceof Link && scene[i].nodeA === rootNode && results.push(scene[i].nodeZ);\n    // scene[i].elementType === 'link' && scene[i].nodeA === rootNode && results.push(scene[i].nodeZ);\n  }\n  return results;\n}\n\n/**\n * 设置layout\n *\n * @param {any} scene 场景\n * @param {any} targetEle 目标node\n * @param {any} isAutoLayout 是否自动布局\n * @returns\n */\nfunction layoutNode(scene, targetEle, isAutoLayout) {\n  let allChild = getNodeChilds(scene.childs, targetEle);\n  if (0 === allChild.length) {\n    return null;\n  }\n  adjustPosition(targetEle, allChild);\n  if (true === isAutoLayout){\n    for (let i = 0; i < allChild.length; i++) {\n      layoutNode(scene, allChild[i], isAutoLayout);\n    }\n  }\n  return null;\n}\n\n\nfunction springLayout($rootNode, $scene) {\n  let additive = 0.01,\n    multiplicative = 0.95,\n    diff = -5,\n    currentX = 0,\n    currentY = 0,\n    counts = 0,\n    allEles = $scene.getElementsByClass(Node);\n  /**\n   * 动态调整位置\n   *\n   * @param {any} rn\n   * @param {any} tarNode\n   */\n  function dynamicAdjustPos(rn, tarNode) {\n    let distanceX = rn.x - tarNode.x,\n      distanceY = rn.y - tarNode.y;\n    currentX += distanceX * additive,\n      currentY += distanceY * additive,\n      currentX *= multiplicative,\n      currentY *= multiplicative,\n      currentY += diff,\n      tarNode.x += currentX,\n      tarNode.y += currentY;\n  }\n\n  function doSpring() {\n    if (!(++counts > 150)) {\n      for (let i = 0; i < allEles.length; i++) {\n        allEles[i] != $rootNode && dynamicAdjustPos($rootNode, allEles[i], allEles);\n      }\n      setTimeout(doSpring, 1e3 / 24);\n    }\n  }\n\n  doSpring();\n}\n\n/**\n * 获取树的深度\n *\n * @param {any} $scene 场景\n * @param {any} $rootNode 根结点\n * @returns\n */\nfunction getTreeDeep($scene, $rootNode) {\n  function calcDeep(_scene, _rootNode, _deep) {\n    let allchilds = getNodeChilds(_scene, _rootNode);\n    _deep > deep && (deep = _deep);\n    for (let i = 0; i < allchilds.length; i++) {\n      calcDeep(_scene, allchilds[i], _deep + 1);\n    }\n  }\n  let deep = 0;\n  return calcDeep($scene, $rootNode, 0),\n    deep;\n}\n\n// 整体 layout\nmodule.exports = {\n  layoutNode: layoutNode,\n  getNodeChilds: getNodeChilds,\n  adjustPosition: adjustPosition,\n  springLayout: springLayout,\n  getTreeDeep: getTreeDeep,\n  getRootNodes: getRootNodes,\n  GridLayout: GridLayout,\n  FlowLayout: FlowLayout,\n  AutoBoundLayout: AutoBoundLayout,\n  CircleLayout: CircleLayout,\n  TreeLayout: TreeLayout,\n  getNodesCenter: getNodesCenter,\n  circleLayoutNodes: circleLayoutNodes\n};\n"]}