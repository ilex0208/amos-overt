{"version":3,"sources":["../src/_chart.js"],"names":["_n","require","Node","CircleNode","PieChartNode","_pieChartNode","radius","colors","datas","titles","paint","ctx","$width","$height","width","height","sAngle","i","length","change","Math","PI","eAngle","save","beginPath","fillStyle","moveTo","arc","fill","closePath","restore","font","text","toFixed","textWidth","measureText","_defaultWidth","_x","cos","_y","sin","fillText","stroke","BarChartNode","_barChartNode","showSelected","_span","rectW","strokeStyle","lineTo","rectH","rectX","rectY","fillRect","parseInt","textW","_dw","module","exports"],"mappings":"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","file":"_chart.js","sourcesContent":["//////////////////////////////\n/**\n * chart图表\n * @author ilex\n * @description 2016-11-02 11:56:12\n */\n//////////////////////////////\nconst _n = require('./_node');\n\nconst Node = _n.Node;\nconst CircleNode = _n.CircleNode;\n/**\n * Pie chart\n * 核心: context.arc(x,y,r,sAngle,eAngle,counterclockwise);\n *      x \t圆的中心的 x 坐标。\n *      y \t圆的中心的 y 坐标。\n *      r \t圆的半径。\n *      sAngle \t起始角，以弧度计。（弧的圆形的三点钟位置是 0 度）。\n *      eAngle \t结束角，以弧度计。\n *      counterclockwise \t可选。规定应该逆时针还是顺时针绘图。False = 顺时针，true = 逆时针。\n * @returns\n */\nfunction PieChartNode() {\n  let _pieChartNode = new CircleNode;\n  return _pieChartNode.radius = 150,\n    _pieChartNode.colors = ['#3666B0', '#2CA8E0', '#77D1F6'],\n    _pieChartNode.datas = [0.3, 0.3, 0.4],\n    _pieChartNode.titles = ['A', 'B', 'C'],\n    _pieChartNode.paint = function(ctx) {\n      let $width = 2 * _pieChartNode.radius, $height = 2 * _pieChartNode.radius;\n      _pieChartNode.width = $width, _pieChartNode.height = $height;\n      let sAngle = 0;\n      for (let i = 0; i < this.datas.length; i++) {\n        let change = this.datas[i] * Math.PI * 2;\n        let eAngle = sAngle + change;\n        ctx.save(),\n          ctx.beginPath(),\n          ctx.fillStyle = _pieChartNode.colors[i],\n          ctx.moveTo(0, 0),\n          ctx.arc(0, 0, this.radius, sAngle, eAngle, false),\n          ctx.fill(),\n          ctx.closePath(),\n          ctx.restore(),\n          ctx.beginPath(),\n          ctx.font = this.font;\n        let text = this.titles[i] + ': ' + (100 * this.datas[i]).toFixed(2) + '%',\n          textWidth = ctx.measureText(text).width, // 文本宽度\n          _defaultWidth = (ctx.measureText('田').width, (sAngle + eAngle) / 2), // 默认“田”字宽度\n          _x = this.radius * Math.cos(_defaultWidth),// 开始绘制文本的 x 坐标位置（相对于画布）。\n          _y = this.radius * Math.sin(_defaultWidth);// 开始绘制文本的 y 坐标位置（相对于画布）。\n        _defaultWidth > Math.PI / 2 && _defaultWidth <= Math.PI ? _x -= textWidth : _defaultWidth > Math.PI && _defaultWidth < 2 * Math.PI * 3 / 4 ? _x -= textWidth : _defaultWidth > 2 * Math.PI * .75,\n          ctx.fillStyle = '#FFFFFF',\n          ctx.fillText(text, _x, _y),\n          ctx.moveTo(this.radius * Math.cos(_defaultWidth), this.radius * Math.sin(_defaultWidth)),\n          _defaultWidth > Math.PI / 2 && _defaultWidth < 2 * Math.PI * 3 / 4 && (_x -= textWidth),\n          _defaultWidth > Math.PI,\n          ctx.fill(),\n          ctx.stroke(),\n          ctx.closePath(),\n          sAngle += change;\n      }\n    },\n    _pieChartNode;\n}\n\n/**\n * Bar chart\n * 核心: context.fillRect(x,y,width,height); 填充矩形\n *      x \t矩形左上角的 x 坐标\n *      y \t矩形左上角的 y 坐标\n *      width \t矩形的宽度，以像素计\n *      height \t矩形的高度，以像素计\n *\n * @returns\n */\nfunction BarChartNode() {\n  let _barChartNode = new Node;\n  return _barChartNode.showSelected = false,\n    _barChartNode.width = 250,\n    _barChartNode.height = 180,\n    _barChartNode.colors = ['#3666B0', '#2CA8E0', '#77D1F6'],\n    _barChartNode.datas = [0.3, 0.3, 0.4],\n    _barChartNode.titles = ['A', 'B', 'C'],\n    _barChartNode.paint = function(ctx) {\n      let _span = 3,\n        rectW = (this.width - _span) / this.datas.length;\n      ctx.save(),\n        ctx.beginPath(),\n        ctx.fillStyle = '#FFFFFF',\n        ctx.strokeStyle = '#FFFFFF',\n        ctx.moveTo(- this.width / 2 - 1, -this.height / 2),\n        ctx.lineTo(- this.width / 2 - 1, this.height / 2 + 3),\n        ctx.lineTo(this.width / 2 + _span + 1, this.height / 2 + 3),\n        ctx.stroke(),\n        ctx.closePath(),\n        ctx.restore();\n      for (let i = 0; i < this.datas.length; i++) {\n        ctx.save(),\n          ctx.beginPath(),\n          ctx.fillStyle = _barChartNode.colors[i];\n        let rectH = this.datas[i],\n          rectX = i * (rectW + _span) - this.width / 2,\n          rectY = this.height - rectH - this.height / 2;\n        ctx.fillRect(rectX, rectY, rectW, rectH);\n        let text = '' + parseInt(this.datas[i]),\n          textW = ctx.measureText(text).width,\n          _dw = ctx.measureText('田').width;\n        ctx.fillStyle = '#FFFFFF',\n          ctx.fillText(text, rectX + (rectW - textW) / 2, rectY - _dw),\n          ctx.fillText(this.titles[i], rectX + (rectW - textW) / 2, this.height / 2 + _dw),\n          ctx.fill(),\n          ctx.closePath(),\n          ctx.restore();\n      }\n    },\n    _barChartNode;\n}\n\n// 单独导出\nmodule.exports = {\n  BarChartNode: BarChartNode,\n  PieChartNode: PieChartNode\n};\n"]}