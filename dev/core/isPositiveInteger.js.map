{"version":3,"sources":["../../src/core/isPositiveInteger.js"],"names":["MAX_SAFE_INTEGER","Number","module","exports","isPositiveInteger","isSafePositiveInteger","x","Object","prototype","toString","call"],"mappings":";;AAAA;AACA,IAAIA,mBAAmBC,OAAOD,gBAAP,IAA2B,gBAAlD;AACA;;AAEAE,OAAOC,OAAP,GAAiBC,iBAAjB;AACAF,OAAOC,OAAP,CAAeE,qBAAf,GAAuCA,qBAAvC;;AAEA,SAASD,iBAAT,CAA2BE,CAA3B,EAA8B;AAC1B;AACF,aAAOC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBAAtC;AACD;AACAA,UAAI,CAAJ,KAAU,CAFT;AAGD;AACAA,UAAI,CAJV;AAKD;;AAED;AACA;AACA,SAASD,qBAAT,CAA+BC,CAA/B,EAAkC;AAChC,aAAOF,kBAAkBE,CAAlB,KACDA,KAAKN,gBADX;AAED","file":"isPositiveInteger.js","sourcesContent":["/* $lab:coverage:off$ */\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n/* $lab:coverage:on$ */\n\nmodule.exports = isPositiveInteger;\nmodule.exports.isSafePositiveInteger = isSafePositiveInteger;\n\nfunction isPositiveInteger(x) {\n    // Is it a number?\n  return Object.prototype.toString.call(x) === '[object Number]' &&\n        // Is it an integer?\n        x % 1 === 0 &&\n        // Is it positive?\n        x > 0;\n}\n\n// strict positive integer check:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\nfunction isSafePositiveInteger(x) {\n  return isPositiveInteger(x) &&\n        x <= MAX_SAFE_INTEGER;\n}\n"]}